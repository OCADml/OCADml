{0 OCADml}

OCADml is a collection of types and functions built on top of
{{:https://erratique.ch/software/gg} Gg} facilitating Computer Aided
Design (CAD) in OCaml. In particular, the style of design currently supported is
that of 2D drawing and mesh generation via sweeping/extrusion.

{1:api API}

{!module-OCADml} -- top level library interface

{2 Vectors and transformations}
- {{!OCADml.V2} [V2]} -- 2d vector operations
- {{!OCADml.V3} [V3]} -- 3d vector operations
- {{!OCADml.Affine2} [Affine2]} -- 2d affine transformation matrices
- {{!OCADml.Affine3} [Affine3]} -- 3d affine transformation matrices
- {{!OCADml.Quaternion} [Quaternion]} --
 {{:https://en.wikipedia.org/wiki/Quaternion} quaternion} manipulation andl application
- {{!OCADml.Plane} [Plane]} -- normalized cartesian plane operations

{2 2d paths and polygons}
- {{!OCADml.Path2} [Path2]} -- generation and manipulation of 2d paths
- {{!OCADml.Bezier2} [Bezier2]} -- 2d bezier curves, patches, and splines
- {{!OCADml.CubicSpline} [CubicSpline]} -- cubic spline interpolation of 2d paths
- {{!OCADml.Poly2} [Poly2]} -- 2d polygons (outer, and zero or more inner paths)
- {{!OCADml.PolyText} [PolyText]} -- point representations of text (via cairo)

{2 3d paths, coplanar polygons, and meshes}
- {{!OCADml.Path3} [Path3]} -- generation and manipulation of 3d paths
- {{!OCADml.Bezier3} [Bezier3]} -- 3d bezier curves, patches, and splines
- {{!OCADml.Poly3} [Poly3]} -- planar 3d polygons (outer, and zero or more inner paths)
- {{!OCADml.Mesh} [Mesh]} -- points and faces 3d mesh representation (polyhedrons)

{2 Utilities}
- {{!OCADml.Math} [Math]} -- float and 2d matrix operations
- {{!OCADml.BallTree2} [BallTree2]} -- 2d vector space partitioning search tree
- {{!OCADml.BallTree3} [BallTree3]} -- 3d vector space partitioning search tree

{1:cad CAD Package Specific Frontends}

This library only provides a means to generate point and face based geometries,
in order to perform boolean operations, validation, and export, you'll need to
work with a particular CAD package.

{2 OSCADml}
- {{:https://github.io/OSCADml } github}
- {{:https://ocadml.github.io/OSCADml/OSCADml/index.html} docs}
- {{:https://ocadml.github.io/OSCADml/OSCADml/index.html#examples} examples}

{1:ppx \[@@deriving cad\]}

There is a companion ppx, {{:https://github.com/OCADml/ppx_deriving_cad} \[@@deriving cad\]}
for generating transformation functions for user-defined records and abstract
types composed of types for which the basic transformation functions are
defined, such as vectors ({{!OCADml.V2.t} [V2.t]} or {{!OCADml.V3.t} [V3.t]})
(and those composed of them) provided in this library.
